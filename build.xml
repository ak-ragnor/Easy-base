<?xml version="1.0" encoding="UTF-8"?>
<project name="enterprise-app" default="all" basedir=".">

    <property name="app.name" value="easy-base"/>
    <property name="app.version" value="1.0.0"/>
    <property name="src.dir" value="src/main/java"/>
    <property name="resources.dir" value="src/main/resources"/>
    <property name="webapp.dir" value="src/main/webapp"/>
    <property name="test.dir" value="src/test/java"/>
    <property name="lib.dir" value="lib"/>
    <property name="build.dir" value="target"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="test.classes.dir" value="${build.dir}/test-classes"/>
    <property name="war.dir" value="${build.dir}/war"/>

    <!-- Tomcat Bundle Properties -->
    <property name="tomcat.version" value="9.0.68"/>
    <property name="tomcat.download.url" value="https://archive.apache.org/dist/tomcat/tomcat-9/v${tomcat.version}/bin/apache-tomcat-${tomcat.version}.tar.gz"/>
    <property name="bundle.dir" value="../${app.name}-bundle"/>
    <property name="tomcat.home" value="${bundle.dir}/apache-tomcat-${tomcat.version}"/>

    <!-- Compilation properties -->
    <property name="java.version" value="1.8"/>
    <property name="encoding" value="UTF-8"/>

    <!-- Define classpaths -->
    <path id="compile.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <!-- Clean target -->
    <target name="clean" description="Clean build artifacts">
        <delete dir="${build.dir}"/>
    </target>

    <!-- Deep clean including bundle -->
    <target name="clean-all" depends="clean" description="Clean everything including bundle">
        <delete dir="${bundle.dir}"/>
    </target>

    <!-- Initialize target -->
    <target name="init" depends="clean">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${war.dir}"/>

        <!-- Copy resources -->
        <copy todir="${classes.dir}">
            <fileset dir="${resources.dir}">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>

    <!-- Compile target -->
    <target name="compile" depends="init" description="Compile Java sources">
        <javac srcdir="${src.dir}"
               destdir="${classes.dir}"
               debug="true"
               includeantruntime="false"
               encoding="${encoding}"
               source="${java.version}"
               target="${java.version}">
            <classpath refid="compile.classpath"/>
            <compilerarg value="-parameters"/>
            <compilerarg value="-Xlint:unchecked"/>
        </javac>
    </target>

    <!-- Build WAR -->
    <target name="war" depends="compile" description="Build WAR file">
        <!-- Prepare WAR directory structure -->
        <copy todir="${war.dir}">
            <fileset dir="${webapp.dir}">
                <exclude name="WEB-INF/web.xml.backup"/>
                <exclude name="WEB-INF/spring/**"/>
            </fileset>
        </copy>

        <!-- Copy classes -->
        <copy todir="${war.dir}/WEB-INF/classes">
            <fileset dir="${classes.dir}"/>
        </copy>

        <!-- Copy libraries -->
        <copy todir="${war.dir}/WEB-INF/lib">
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
                <exclude name="servlet-api*.jar"/>
                <exclude name="jsp-api*.jar"/>
                <exclude name="el-api*.jar"/>
                <exclude name="tomcat-*.jar"/>
            </fileset>
        </copy>

        <tstamp>
            <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
        </tstamp>

        <!-- Create WAR file -->
        <war destfile="${build.dir}/${app.name}.war"
             basedir="${war.dir}">
            <manifest>
                <attribute name="Implementation-Title" value="${app.name}"/>
                <attribute name="Implementation-Version" value="${app.version}"/>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Built-Date" value="${TODAY}"/>
            </manifest>
        </war>
    </target>

    <!-- Download Tomcat if not present -->
    <target name="download-tomcat" unless="tomcat.present">
        <mkdir dir="${bundle.dir}"/>
        <echo message="Downloading Tomcat ${tomcat.version}..."/>
        <get src="${tomcat.download.url}"
             dest="${bundle.dir}/tomcat.tar.gz"
             verbose="true"
             usetimestamp="true"/>
        <untar src="${bundle.dir}/tomcat.tar.gz"
               dest="${bundle.dir}"
               compression="gzip"/>
        <delete file="${bundle.dir}/tomcat.tar.gz"/>
        <chmod dir="${tomcat.home}/bin" perm="755" includes="*.sh"/>
    </target>

    <!-- Check if Tomcat exists -->
    <target name="check-tomcat">
        <available file="${tomcat.home}" type="dir" property="tomcat.present"/>
    </target>

    <!-- Setup Tomcat Bundle -->
    <target name="setup-tomcat" depends="check-tomcat,download-tomcat" description="Setup Tomcat with configuration">
        <!-- Remove default webapps -->
        <delete dir="${tomcat.home}/webapps/ROOT"/>
        <delete dir="${tomcat.home}/webapps/docs"/>
        <delete dir="${tomcat.home}/webapps/examples"/>
        <delete dir="${tomcat.home}/webapps/host-manager"/>
        <delete dir="${tomcat.home}/webapps/manager"/>

        <!-- Copy our configuration files -->
        <copy todir="${tomcat.home}/conf" overwrite="true">
            <fileset dir="deployment/tomcat">
                <include name="server.xml"/>
                <include name="context.xml"/>
                <include name="catalina.properties"/>
            </fileset>
        </copy>

        <!-- Copy JDBC drivers to Tomcat lib -->
        <copy todir="${tomcat.home}/lib">
            <fileset dir="${lib.dir}">
                <include name="postgresql-*.jar"/>
                <include name="hsqldb-*.jar"/>
                <include name="HikariCP-*.jar"/>
            </fileset>
        </copy>

        <!-- Create necessary directories -->
        <mkdir dir="${tomcat.home}/logs"/>
        <mkdir dir="${tomcat.home}/temp"/>
        <mkdir dir="${tomcat.home}/work"/>

        <!-- Create setenv.sh for environment variables -->
        <echo file="${tomcat.home}/bin/setenv.sh">#!/bin/bash
            # Environment settings for ${app.name}

            # Memory settings
            export CATALINA_OPTS="$CATALINA_OPTS -Xms512m"
            export CATALINA_OPTS="$CATALINA_OPTS -Xmx2048m"
            export CATALINA_OPTS="$CATALINA_OPTS -XX:MaxPermSize=256m"

            # Spring Profile
            export CATALINA_OPTS="$CATALINA_OPTS -Dspring.profiles.active=${spring.profiles.active}"

            # Application settings
            export CATALINA_OPTS="$CATALINA_OPTS -Dapp.name=${app.name}"
            export CATALINA_OPTS="$CATALINA_OPTS -Dapp.version=${app.version}"

            # JMX for monitoring (optional)
            export CATALINA_OPTS="$CATALINA_OPTS -Dcom.sun.management.jmxremote"
            export CATALINA_OPTS="$CATALINA_OPTS -Dcom.sun.management.jmxremote.port=9999"
            export CATALINA_OPTS="$CATALINA_OPTS -Dcom.sun.management.jmxremote.ssl=false"
            export CATALINA_OPTS="$CATALINA_OPTS -Dcom.sun.management.jmxremote.authenticate=false"

            echo "Starting ${app.name} with profile: ${spring.profiles.active}"
        </echo>
        <chmod file="${tomcat.home}/bin/setenv.sh" perm="755"/>

        <!-- Create setenv.bat for Windows -->
        <echo file="${tomcat.home}/bin/setenv.bat">@echo off
            rem Environment settings for ${app.name}

            set "CATALINA_OPTS=%CATALINA_OPTS% -Xms512m"
            set "CATALINA_OPTS=%CATALINA_OPTS% -Xmx2048m"
            set "CATALINA_OPTS=%CATALINA_OPTS% -XX:MaxPermSize=256m"
            set "CATALINA_OPTS=%CATALINA_OPTS% -Dspring.profiles.active=${spring.profiles.active}"
            set "CATALINA_OPTS=%CATALINA_OPTS% -Dapp.name=${app.name}"
            set "CATALINA_OPTS=%CATALINA_OPTS% -Dapp.version=${app.version}"

            echo Starting ${app.name} with profile: ${spring.profiles.active}
        </echo>
    </target>

    <!-- Deploy WAR to bundle -->
    <target name="deploy-to-bundle" depends="war,setup-tomcat" description="Deploy WAR to Tomcat bundle">
        <copy file="${build.dir}/${app.name}.war"
              todir="${tomcat.home}/webapps"
              overwrite="true"/>
        <echo message="Deployed ${app.name}.war to Tomcat bundle"/>
    </target>

    <!-- Create convenience scripts -->
    <target name="create-scripts" depends="setup-tomcat">
        <!-- Start script -->
        <echo file="${bundle.dir}/start.sh">#!/bin/bash
            cd $(dirname $0)
            echo "Starting ${app.name}..."
            ./apache-tomcat-${tomcat.version}/bin/startup.sh
            sleep 5
            echo "Application should be available at: http://localhost:8080/${app.name}"
            echo "Logs: tail -f apache-tomcat-${tomcat.version}/logs/catalina.out"
        </echo>
        <chmod file="${bundle.dir}/start.sh" perm="755"/>

        <!-- Stop script -->
        <echo file="${bundle.dir}/stop.sh">#!/bin/bash
            cd $(dirname $0)
            echo "Stopping ${app.name}..."
            ./apache-tomcat-${tomcat.version}/bin/shutdown.sh
        </echo>
        <chmod file="${bundle.dir}/stop.sh" perm="755"/>

        <!-- Restart script -->
        <echo file="${bundle.dir}/restart.sh">#!/bin/bash
            cd $(dirname $0)
            ./stop.sh
            sleep 5
            ./start.sh
        </echo>
        <chmod file="${bundle.dir}/restart.sh" perm="755"/>

        <!-- Logs script -->
        <echo file="${bundle.dir}/logs.sh">#!/bin/bash
            cd $(dirname $0)
            tail -f apache-tomcat-${tomcat.version}/logs/catalina.out
        </echo>
        <chmod file="${bundle.dir}/logs.sh" perm="755"/>

        <!-- Deploy script for fast redeploy -->
        <echo file="${bundle.dir}/deploy.sh">#!/bin/bash
            cd $(dirname $0)
            if [ -f "$1" ]; then
            echo "Deploying $1..."
            cp $1 apache-tomcat-${tomcat.version}/webapps/${app.name}.war
            echo "Deployment complete. Check logs for status."
            else
            echo "Usage: ./deploy.sh path/to/${app.name}.war"
            fi
        </echo>
        <chmod file="${bundle.dir}/deploy.sh" perm="755"/>

        <!-- Windows scripts -->
        <echo file="${bundle.dir}/start.bat">@echo off
            cd /d %~dp0
            echo Starting ${app.name}...
            call apache-tomcat-${tomcat.version}\bin\startup.bat
            echo Application should be available at: http://localhost:8080/${app.name}
        </echo>

        <echo file="${bundle.dir}/stop.bat">@echo off
            cd /d %~dp0
            echo Stopping ${app.name}...
            call apache-tomcat-${tomcat.version}\bin\shutdown.bat
        </echo>
    </target>

    <!-- Quick deploy target -->
    <target name="deploy" depends="war" description="Quick deploy - just build WAR and copy to existing bundle">
        <available file="${tomcat.home}/webapps" type="dir" property="bundle.exists"/>
        <fail unless="bundle.exists" message="Tomcat bundle not found. Run 'ant all' first."/>

        <copy file="${build.dir}/${app.name}.war"
              todir="${tomcat.home}/webapps"
              overwrite="true"/>
        <echo message="WAR deployed. Tomcat will auto-reload the application."/>
    </target>

    <!-- Run bundle -->
    <target name="run" description="Start the Tomcat bundle">
        <exec executable="${bundle.dir}/start.sh" os="Linux,Mac OS X"/>
        <exec executable="cmd" os="Windows">
            <arg value="/c"/>
            <arg value="${bundle.dir}/start.bat"/>
        </exec>
        <echo message="Tomcat started. Application available at http://localhost:8080/${app.name}"/>
    </target>

    <!-- Stop bundle -->
    <target name="stop" description="Stop the Tomcat bundle">
        <exec executable="${bundle.dir}/stop.sh" os="Linux,Mac OS X"/>
        <exec executable="cmd" os="Windows">
            <arg value="/c"/>
            <arg value="${bundle.dir}/stop.bat"/>
        </exec>
    </target>

    <!-- Main build target -->
    <target name="all" depends="clean,compile,deploy-to-bundle,create-scripts" description="Full build with Tomcat bundle">
        <echo message="========================================="/>
        <echo message="Build completed successfully!"/>
        <echo message="========================================="/>
        <echo message="Bundle location: ${bundle.dir}"/>
        <echo message=""/>
        <echo message="To start the application:"/>
        <echo message="  cd ${bundle.dir}"/>
        <echo message="  ./start.sh"/>
        <echo message=""/>
        <echo message="Or from this directory:"/>
        <echo message="  ant run"/>
        <echo message=""/>
        <echo message="For quick redeploy:"/>
        <echo message="  ant deploy"/>
        <echo message="========================================="/>
    </target>

    <!-- Profile-specific builds -->
    <target name="dev" description="Build for development">
        <property name="spring.profiles.active" value="dev"/>
        <antcall target="all"/>
    </target>

    <target name="staging" description="Build for staging">
        <property name="spring.profiles.active" value="staging"/>
        <antcall target="all"/>
    </target>

    <target name="prod" description="Build for production">
        <property name="spring.profiles.active" value="prod"/>
        <antcall target="all"/>
    </target>
</project>